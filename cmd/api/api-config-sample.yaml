# Copyright The Sandpiper Authors. All rights reserved.
# Use of this source code is governed by an MIT-style
# license that can be found in the LICENSE.md file.

# Sample Sandpiper server configuration file (for documentation only). An "api-" yaml file is"
# generated automatically by the `sandpiper init` command.

database:
  dialect: postgres
  network: tcp           # "tcp" or "unix" (for unix domain sockets) ("DB_NETWORK")
  host: localhost        # localhost, ip addr or unix socket (/var/run/postgresql) ("DB_HOST")
  port: 5432             # port number  ("DB_PORT")
  database: sandpiper    # database name ("DB_DATABASE")
  user: sandpiper        # database role ("DB_USER")
  password: development  # plaintext password ("DB_PASSWORD")
  sslmode: disable       # "disable", "allow", "verify-ca" ("DB_SSLMODE")
  timeout_seconds: 5     # how many seconds to wait for a sql command to return
  log_queries: true      # display sql commands executed by the server

server:
  port: 8080
  read_timeout_seconds: 10
  write_timeout_seconds: 5
  max_sync_procs: 5
  debug: false   # WARNING: debug creates non-JSON responses (but shows underlying errors). Not for production!
  # ** Change this sample secret!!! (required only on "primary" server) **
  # Can override with "APIKEY_SECRET" env variable
  # This should be a Base64 Encoded AES-256 key (44 chars)
  # generate with `sandpiper secrets`
  api_key_secret: u7WJ3kpqyvAkKb7HIfYJoSok2DoqTa9YhaCUhUujqb8=

jwt:
  # ** Change this sample secret!!! (required on all servers) **
  # Can override secret with "JWT_SECRET" env variable
  # generate with `sandpiper secrets`
  secret: WuBF5X3FS8IYGb5BblKPJxfrDHAHJYWqG649C+qAafmXy0fow0IX8NpDPQXuHRuUbLSlX/L0IjdD5Lu2dWQOMw
  duration_minutes: 15
  refresh_duration_minutes: 15
  max_refresh_minutes: 1440
  signing_algorithm: HS256
  min_secret_length: 64

application:
  # 0 # too guessable: risky password. (guesses < 10^3)
  # 1 # very guessable: protection from throttled online attacks. (guesses < 10^6)
  # 2 # somewhat guessable: protection from unthrottled online attacks. (guesses < 10^8)
  # 3 # safely unguessable: moderate protection from offline slow-hash scenario. (guesses < 10^10)
  # 4 # very unguessable: strong protection from offline slow-hash scenario. (guesses >= 10^10)
  min_password_strength: 1  # 0,1,2,3,4
  service_logging: true
